association_by_datasource_direct:
  - datatypeId: string
  - datasourceId: string
  - diseaseId: string
  - targetId: string
  - score: double
  - evidenceCount: int64

association_by_datasource_indirect:
  - datatypeId: string
  - datasourceId: string
  - diseaseId: string
  - targetId: string
  - score: double
  - evidenceCount: int64

association_by_datatype_direct:
  - diseaseId: string
  - targetId: string
  - datatypeId: string
  - score: double
  - evidenceCount: int64

association_by_datatype_indirect:
  - diseaseId: string
  - targetId: string
  - datatypeId: string
  - score: double
  - evidenceCount: int64

association_by_overall_indirect:
  - diseaseId: string
  - targetId: string
  - score: double
  - evidenceCount: int64

association_overall_direct:
  - diseaseId: string
  - targetId: string
  - score: double
  - evidenceCount: int64

biosample:
  - biosampleId: string
  - biosampleName: string
  - description: string
  - xrefs: list<element: string>
  - synonyms: list<element: string>
  - parents: list<element: string not null>
  - ancestors: list<element: string>
  - children: list<element: string not null>
  - descendants: list<element: string>

colocalisation_coloc:
  - leftStudyLocusId: string
  - rightStudyLocusId: string
  - chromosome: string
  - rightStudyType: string
  - numberColocalisingVariants: int64
  - h0: double
  - h1: double
  - h2: double
  - h3: double
  - h4: double
  - colocalisationMethod: string
  - betaRatioSignAverage: double

colocalisation_ecaviar:
  - leftStudyLocusId: string
  - rightStudyLocusId: string
  - chromosome: string
  - rightStudyType: string
  - numberColocalisingVariants: int64
  - clpp: double
  - colocalisationMethod: string
  - betaRatioSignAverage: double

credible_set:
  - studyLocusId: string
  - studyId: string
  - variantId: string
  - chromosome: string
  - position: int32
  - region: string
  - beta: double
  - zScore: double
  - pValueMantissa: float
  - pValueExponent: int32
  - effectAlleleFrequencyFromSource: float
  - standardError: double
  - subStudyDescription: string
  - qualityControls: list<element: string>
  - finemappingMethod: string
  - credibleSetIndex: int32
  - credibleSetlog10BF: double
  - purityMeanR2: double
  - purityMinR2: double
  - locusStart: int32
  - locusEnd: int32
  - sampleSize: int32
  - ldSet: list<element: struct<tagVariantId: string, r2Overall: double>>
  - locus: list<element: struct<is95CredibleSet: bool, is99CredibleSet: bool, logBF: double, posteriorProbability: double, variantId: string, pValueMantissa: float, pValueExponent: int32, beta: double, standardError: double, r2Overall: double>>
  - confidence: string
  - studyType: string
  - isTransQtl: bool

disease:
  - id: large_string
  - code: large_string
  - name: large_string
  - description: large_string
  - dbXRefs: large_list<element: large_string>
  - parents: large_list<element: large_string>
  - synonyms: struct<hasExactSynonym: large_list<element: large_string>, hasRelatedSynonym: large_list<element: large_string>, hasNarrowSynonym: large_list<element: large_string>, hasBroadSynonym: large_list<element: large_string>>
  - obsoleteTerms: large_list<element: large_string>
  - obsoleteXRefs: large_list<element: large_string>
  - children: large_list<element: large_string>
  - ancestors: large_list<element: large_string>
  - therapeuticAreas: large_list<element: large_string>
  - descendants: large_list<element: large_string>
  - ontology: struct<isTherapeuticArea: bool, leaf: bool, sources: struct<url: large_string, name: large_string>>

disease_hpo:
  - id: large_string
  - name: large_string
  - description: large_string
  - dbXRefs: large_list<element: large_string>
  - parents: large_list<element: large_string>
  - obsoleteTerms: large_list<element: large_string>

disease_phenotype:
  - disease: large_string
  - phenotype: large_string
  - evidence: large_list<element: struct<aspect: large_string, bioCuration: large_string, diseaseFromSourceId: large_string, diseaseFromSource: large_string, diseaseName: large_string, evidenceType: large_string, frequency: large_string, modifiers: large_list<element: large_string>, onset: large_list<element: large_string>, qualifier: large_string, qualifierNot: bool, references: large_list<element: large_string>, sex: large_string, resource: large_string>>

drug_indication:
  - id: string
  - indications: list<element: struct<disease: string, efoName: string, references: list<element: struct<source: string, ids: list<element: string not null> not null> not null> not null, maxPhaseForIndication: double> not null>
  - approvedIndications: list<element: string not null>
  - indicationCount: int32

drug_mechanism_of_action:
  - actionType: string
  - mechanismOfAction: string
  - chemblIds: list<element: string>
  - targetName: string
  - targetType: string
  - targets: list<element: string not null>
  - references: list<element: struct<source: string, ids: list<element: string not null> not null, urls: list<element: string not null> not null> not null>

drug_molecule:
  - id: string
  - canonicalSmiles: string
  - inchiKey: string
  - drugType: string
  - blackBoxWarning: bool
  - name: string
  - yearOfFirstApproval: int64
  - maximumClinicalTrialPhase: double
  - parentId: string
  - hasBeenWithdrawn: bool
  - isApproved: bool
  - tradeNames: list<element: string>
  - synonyms: list<element: string>
  - crossReferences: list<element: struct<source: string not null, ids: list<element: string>> not null>
  - childChemblIds: list<element: string not null>
  - linkedDiseases: struct<rows: list<element: string> not null, count: int32 not null>
  - linkedTargets: struct<rows: list<element: string not null> not null, count: int32 not null>
  - description: string

drug_warning:
  - chemblIds: list<element: string>
  - toxicityClass: string
  - country: string
  - description: string
  - id: int64
  - references: list<element: struct<ref_id: string, ref_type: string, ref_url: string>>
  - warningType: string
  - year: int64
  - efo_term: string
  - efo_id: string
  - efo_id_for_warning_class: string

expression:
  - id: string
  - tissues: list<element: struct<efo_code: string, label: string, organs: list<element: string>, anatomical_systems: list<element: string>, rna: struct<value: double, zscore: int32, level: int32, unit: string> not null, protein: struct<reliability: bool, level: int32, cell_type: list<element: struct<name: string, reliability: bool, level: int32> not null> not null> not null> not null>

go:
  - id: string
  - name: string

interaction:
  - sourceDatabase: string
  - targetA: string
  - intA: string
  - intABiologicalRole: string
  - targetB: string
  - intB: string
  - intBBiologicalRole: string
  - speciesA: struct<mnemonic: string, scientific_name: string, taxon_id: int64>
  - speciesB: struct<mnemonic: string, scientific_name: string, taxon_id: int64>
  - count: int64
  - scoring: double

interaction_evidence:
  - participantDetectionMethodA: list<element: struct<miIdentifier: string, shortName: string>>
  - participantDetectionMethodB: list<element: struct<miIdentifier: string, shortName: string>>
  - hostOrganismTaxId: int64
  - targetB: string
  - evidenceScore: double
  - expansionMethodShortName: string
  - hostOrganismScientificName: string
  - intBBiologicalRole: string
  - interactionResources: struct<databaseVersion: string, sourceDatabase: string>
  - interactionDetectionMethodShortName: string
  - intA: string
  - intBSource: string
  - interactionTypeMiIdentifier: string
  - speciesB: struct<mnemonic: string, scientificName: string, taxonId: int64>
  - expansionMethodMiIdentifier: string
  - interactionTypeShortName: string
  - interactionIdentifier: string
  - hostOrganismTissue: struct<fullName: string, shortName: string, xrefs: list<element: string>>
  - speciesA: struct<mnemonic: string, scientificName: string, taxonId: int64>
  - intASource: string
  - intB: string
  - pubmedId: string
  - intABiologicalRole: string
  - interactionScore: double
  - targetA: string
  - interactionDetectionMethodMiIdentifier: string

known_drug:
  - drugId: string
  - targetId: string
  - diseaseId: string
  - phase: double
  - status: string
  - urls: list<element: struct<niceName: string, url: string>>
  - ancestors: list<element: string>
  - label: string
  - approvedSymbol: string
  - approvedName: string
  - targetClass: list<element: string>
  - prefName: string
  - tradeNames: list<element: string>
  - synonyms: list<element: string>
  - drugType: string
  - mechanismOfAction: string
  - targetName: string

l2g_prediction:
  - studyLocusId: string
  - geneId: string
  - score: double
  - features: list<element: struct<name: string not null, value: float, shapValue: float> not null>
  - shapBaseValue: float

literature:
  - pmid: string
  - pmcid: string
  - date: date32[day]
  - year: int32
  - month: int32
  - day: int32
  - keywordId: string
  - relevance: double
  - keywordType: string

literature_vector:
  - category: string
  - word: string
  - norm: double
  - vector: list<element: double not null>

mouse_phenotype:
  - biologicalModels: list<element: struct<allelicComposition: string, geneticBackground: string, id: string, literature: list<element: string>>>
  - modelPhenotypeClasses: list<element: struct<id: string, label: string>>
  - modelPhenotypeId: string
  - modelPhenotypeLabel: string
  - targetFromSourceId: string
  - targetInModel: string
  - targetInModelEnsemblId: string
  - targetInModelMgiId: string

openfda_significant_adverse_drug_reactions:
  - chembl_id: string
  - event: string
  - count: int64
  - llr: double
  - critval: double
  - meddraCode: string

openfda_significant_adverse_target_reactions:
  - targetId: string
  - event: string
  - count: int64
  - llr: double
  - critval: double
  - meddraCode: string

pharmacogenomics:
  - datasourceId: string
  - datasourceVersion: string
  - datatypeId: string
  - directionality: string
  - evidenceLevel: string
  - genotype: string
  - genotypeAnnotationText: string
  - genotypeId: string
  - haplotypeFromSourceId: string
  - haplotypeId: string
  - literature: list<element: string>
  - pgxCategory: string
  - phenotypeFromSourceId: string
  - phenotypeText: string
  - variantAnnotation: list<element: struct<baseAlleleOrGenotype: string, comparisonAlleleOrGenotype: string, directionality: string, effect: string, effectDescription: string, effectType: string, entity: string, literature: string>>
  - studyId: string
  - targetFromSourceId: string
  - variantFunctionalConsequenceId: string
  - variantRsId: string
  - variantId: string
  - isDirectTarget: bool
  - drugs: list<element: struct<drugFromSource: string, drugId: string> not null>

reactome:
  - id: string
  - label: string
  - ancestors: list<element: string>
  - descendants: list<element: string>
  - children: list<element: string>
  - parents: list<element: string>
  - path: list<element: list<element: string>>

so:
  - id: large_string
  - label: large_string

study:
  - studyId: string
  - geneId: string
  - projectId: string
  - studyType: string
  - traitFromSource: string
  - traitFromSourceMappedIds: list<element: string>
  - biosampleFromSourceId: string
  - pubmedId: string
  - publicationTitle: string
  - publicationFirstAuthor: string
  - publicationDate: string
  - publicationJournal: string
  - backgroundTraitFromSourceMappedIds: list<element: string>
  - initialSampleSize: string
  - nCases: int32
  - nControls: int32
  - nSamples: int32
  - cohorts: list<element: string>
  - ldPopulationStructure: list<element: struct<ldPopulation: string, relativeSampleSize: double>>
  - discoverySamples: list<element: struct<sampleSize: int32, ancestry: string>>
  - replicationSamples: list<element: struct<sampleSize: int32, ancestry: string>>
  - qualityControls: list<element: string>
  - analysisFlags: list<element: string>
  - summarystatsLocation: string
  - hasSumstats: bool
  - condition: string
  - sumstatQCValues: list<element: struct<QCCheckName: string, QCCheckValue: float>>
  - diseaseIds: list<element: string not null>
  - backgroundDiseaseIds: list<element: string not null>
  - biosampleId: string

target:
  - id: string
  - approvedSymbol: string
  - biotype: string
  - transcriptIds: list<element: string>
  - canonicalTranscript: struct<id: string, chromosome: string, start: int64, end: int64, strand: string>
  - canonicalExons: list<element: string>
  - genomicLocation: struct<chromosome: string, start: int64, end: int64, strand: int32>
  - alternativeGenes: list<element: string>
  - approvedName: string
  - go: list<element: struct<id: string, source: string, evidence: string, aspect: string, geneProduct: string, ecoId: string>>
  - hallmarks: struct<attributes: list<element: struct<pmid: int64, description: string, attribute_name: string> not null>, cancerHallmarks: list<element: struct<pmid: int64, description: string, impact: string, label: string> not null>>
  - synonyms: list<element: struct<label: string, source: string>>
  - symbolSynonyms: list<element: struct<label: string, source: string>>
  - nameSynonyms: list<element: struct<label: string, source: string>>
  - functionDescriptions: list<element: string>
  - subcellularLocations: list<element: struct<location: string, source: string, termSL: string, labelSL: string>>
  - targetClass: list<element: struct<id: int64, label: string, level: string not null> not null>
  - obsoleteSymbols: list<element: struct<label: string, source: string>>
  - obsoleteNames: list<element: struct<label: string, source: string>>
  - constraint: list<element: struct<constraintType: string not null, score: float, exp: float, obs: int32, oe: float, oeLower: float, oeUpper: float, upperRank: int32, upperBin: int32, upperBin6: int32> not null>
  - tep: struct<targetFromSourceId: string, description: string, therapeuticArea: string, url: string>
  - proteinIds: list<element: struct<id: string, source: string> not null>
  - dbXrefs: list<element: struct<id: string, source: string>>
  - chemicalProbes: list<element: struct<control: string, drugId: string, id: string, isHighQuality: bool, mechanismOfAction: list<element: string>, origin: list<element: string>, probeMinerScore: int64, probesDrugsScore: int64, scoreInCells: int64, scoreInOrganisms: int64, targetFromSourceId: string, urls: list<element: struct<niceName: string, url: string>>> not null>
  - homologues: list<element: struct<speciesId: string, speciesName: string, homologyType: string, targetGeneId: string, isHighConfidence: string, targetGeneSymbol: string, queryPercentageIdentity: double, targetPercentageIdentity: double, priority: int32> not null>
  - tractability: list<element: struct<modality: string not null, id: string not null, value: bool not null> not null>
  - safetyLiabilities: list<element: struct<event: string, eventId: string, effects: list<element: struct<direction: string, dosing: string>>, biosamples: list<element: struct<cellFormat: string, cellLabel: string, tissueId: string, tissueLabel: string>>, datasource: string, literature: string, url: string, studies: list<element: struct<description: string, name: string, type: string>>> not null>
  - pathways: list<element: struct<pathwayId: string, pathway: string, topLevelTerm: string> not null>
  - tss: int64

target_essentiality:
  - id: string
  - geneEssentiality: list<element: struct<depMapEssentiality: list<element: struct<screens: list<element: struct<cellLineName: string, depmapId: string, diseaseCellLineId: string, diseaseFromSource: string, expression: double, geneEffect: double, mutation: string>>, tissueId: string, tissueName: string>>, isEssential: bool> not null>

target_prioritisation:
  - targetId: string
  - isInMembrane: int32
  - isSecreted: int32
  - hasSafetyEvent: int32
  - hasPocket: int32
  - hasLigand: int32
  - hasSmallMoleculeBinder: int32
  - geneticConstraint: double
  - paralogMaxIdentityPercentage: double
  - mouseOrthologMaxIdentityPercentage: double
  - isCancerDriverGene: int32
  - hasTEP: int32
  - mouseKOScore: double
  - hasHighQualityChemicalProbes: int32
  - maxClinicalTrialPhase: double
  - tissueSpecificity: double
  - tissueDistribution: double

variant:
  - variantId: string
  - chromosome: string
  - position: int32
  - referenceAllele: string
  - alternateAllele: string
  - variantEffect: list<element: struct<method: string, assessment: string, score: float, assessmentFlag: string, targetId: string, normalisedScore: double>>
  - mostSevereConsequenceId: string
  - transcriptConsequences: list<element: struct<variantFunctionalConsequenceIds: list<element: string>, aminoAcidChange: string, uniprotAccessions: list<element: string>, isEnsemblCanonical: bool, codons: string, distanceFromFootprint: int64, distanceFromTss: int64, appris: string, maneSelect: string, targetId: string, impact: string, lofteePrediction: string, siftPrediction: float, polyphenPrediction: float, consequenceScore: float, transcriptIndex: int32, approvedSymbol: string, biotype: string, transcriptId: string> not null>
  - rsIds: list<element: string>
  - hgvsId: string
  - alleleFrequencies: list<element: struct<populationName: string, alleleFrequency: double> not null>
  - dbXrefs: list<element: struct<id: string, source: string> not null>
  - variantDescription: string

