[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "drug_disease_interaction"
version = "0.1.0"
description = "Drug-Disease Interaction Prediction using Hybrid RAG"
authors = [{name = "Satya Pratheek TATA", email = "satyapratheek.tata@edhec.com"}]
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

dependencies = [
    # Core API Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",

    # Database Drivers (Essential)
    "neo4j>=5.15.0",
    "weaviate-client>=4.4.0",

    # LlamaIndex Core (Essential for RAG)
    "llama-index-core>=0.10.0",
    "llama-index-llms-ollama>=0.1.0",
    "llama-index-embeddings-ollama>=0.1.0",

    # ML/NLP (Essential)
    "sentence-transformers>=2.2.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",

    # HTTP Client
    "httpx>=0.25.0",
    "ollama>=0.3.0",

    # Caching & Storage
    "redis>=5.0.0",
    "fastapi-cache2>=0.2.0",

    # Basic utilities
    "python-dotenv>=1.0.0",

    # Testing (Development)
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
]
dev = [
    "black",
    "isort",
    "flake8",
    "mypy",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = [
    "src/tests",
]
norecursedirs = [
    "data",
    "docker",
    "logs",
    "aux_files",
    ".venv",
]
markers = [
    "asyncio: mark a test as asynchronous.",
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "-ra"
]
# You can also add custom commands
[project.scripts]
test-unit = "test_runner:main"